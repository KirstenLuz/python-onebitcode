# Módulo 2 – Condições, Loops, List Comprehension, Try/Except e Funções  

Objetivo: Praticar lógica condicional, repetição, tratamento de erros e modularização.  

1. Peça a idade de uma pessoa e diga se ela é maior ou menor de idade.  
2. Receba um número e informe se ele é par ou ímpar.  
3. Use um `for` para exibir os números de 1 a 10.  
4. Use `range()` para exibir os números pares de 0 a 20.  
5. Percorra uma lista de nomes usando `enumerate()` e exiba índice e nome.  
6. Peça 5 notas e calcule a média.  
7. Use `while` para pedir uma senha até que o usuário acerte.  
8. Crie uma lista com números de 1 a 10 e use **list comprehension** para criar outra lista apenas com números pares.  
9. Use `try/except` para evitar erro de divisão por zero.  
10. Capture `ValueError` ao tentar converter entrada inválida para `int`.  
11. Crie uma função que calcule o fatorial de um número.  
12. Crie uma função com valor padrão para um parâmetro.  
13. Crie uma função que receba `*args` e imprima todos os valores.  
14. Crie uma função que receba `**kwargs` e exiba as chaves e valores.  
15. Crie uma função `lambda` que calcule o quadrado de um número.  
16. Use função `lambda` para inverter uma string.  
17. Crie uma função que receba uma lista e retorne a lista ordenada sem modificar a original.  

